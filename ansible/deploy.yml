- name: Deploy with docker
  hosts: "{{ deploy_env }}"
  become: true
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python
  environment:
    CRYPTOGRAPHY_ALLOW_OPENSSL_102: true

  tasks:
    - name: query commit version
      become: false
      shell: git rev-parse HEAD
      register: git_result
      connection: local
      run_once: true
    - set_fact: git_commit={{ git_result.stdout }}
    - debug:
        msg: git_commit={{ git_commit }}

    - name: docker login
      docker_login:
        username: "{{ docker_login.username }}"
        password: "{{ docker_login.password }}"
        registry_url: "{{ docker_login.registry_url }}"

    - name: copy local files
      copy: >
        src={{ item }}
        dest={{ deploy.dir }}
      with_items: "{{ deploy.copy_files }}"
      when: deploy.copy_files is defined

    - name: create dirs
      file:
        path: "{{ deploy.dir }}/{{ item }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755
        access_time: now
      with_items: "{{ deploy.create_dirs }}"
      when: deploy.create_dirs is defined

    - name: run container
      docker_container:
        name: task-feeds
        image: "{{ build.image }}:{{ git_commit }}"
        entrypoint: yuanyuan_demo/task_feeds
        command: >-
          --redis_host 127.0.0.1:6379
          --log_dir logs/task_feeds
          --alsologtostderr
          --logbufsecs 0
          --task_dir data/tasks
          --ans_dir data/ans
          --account_rel_dir data/account_relation
          --fc_path data/fc/base
          --v=1
        volumes:
          - "{{ deploy.dir }}/output/data:/data:rw"
          - "{{ deploy.dir }}/output/logs:/logs:rw"
        network_mode: host
        state: started
        restart: yes
        container_default_behavior: compatibility

    - name: wait for all service ready
      become: false
      wait_for:
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        port: '{{ item }}'
        timeout: 300
      connection: local
      with_items: "{{ deploy.readiness_probe.ports }}"
